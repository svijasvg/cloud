# Generated by Django 2.2.1 on 2019-06-18 08:00

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Font',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='SVG name')),
                ('family', models.CharField(blank=True, default='', max_length=100, verbose_name='family')),
                ('style', models.CharField(blank=True, default='', max_length=100, verbose_name='weightStyle')),
                ('source', models.CharField(blank=True, default='', max_length=100, verbose_name='filename')),
                ('google', models.BooleanField(default=True, verbose_name='Google font')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('title', models.CharField(default='', max_length=100, verbose_name='page title')),
                ('touch', models.CharField(default='', max_length=100, verbose_name='iPhone icon name')),
                ('email', models.CharField(default='', max_length=100, verbose_name='destination email')),
                ('code', models.CharField(blank=True, default='', max_length=2, verbose_name='two-letter code')),
                ('form_name', models.CharField(default='', max_length=100, verbose_name='name field')),
                ('form_email', models.CharField(default='', max_length=100, verbose_name='email field')),
                ('form_status', models.CharField(default='', max_length=100, verbose_name='status message')),
                ('form_send', models.CharField(default='', max_length=100, verbose_name='send button')),
                ('form_sending', models.CharField(default='', max_length=100, verbose_name='message while sending')),
                ('form_rcvd', models.CharField(default='', max_length=100, verbose_name='message once sent')),
                ('form_alert_rcvd', models.CharField(default='', max_length=100, verbose_name='alert message sent')),
                ('form_alert_fail', models.CharField(default='', max_length=100, verbose_name='alert send failed')),
                ('bcc', models.CharField(blank=True, default='', max_length=200, verbose_name='bcc: field for contact form')),
                ('default', models.CharField(blank=True, default='', max_length=200, verbose_name='sender when email fails verifcation')),
                ('no_email', models.CharField(blank=True, default='', max_length=200, verbose_name='sender when only phone number is given')),
                ('subject', models.CharField(blank=True, default='', max_length=200, verbose_name='email subject')),
                ('mail_frm', models.CharField(blank=True, default='', max_length=200, verbose_name='sending address in body')),
                ('comment', models.TextField(blank=True, default='', max_length=5000, verbose_name='source comments')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200)),
                ('filename', models.CharField(blank=True, default='', max_length=200)),
            ],
            options={
                'ordering': ['responsive__name', 'prefix__path', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visitable', models.BooleanField(default=True, verbose_name='visitable')),
                ('notes', models.TextField(blank=True, default='', max_length=2000)),
                ('pub_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('url', models.CharField(default='', max_length=200, verbose_name='URL (follows prefix)')),
                ('title', models.CharField(blank=True, default='', max_length=200)),
                ('access_name', models.CharField(blank=True, default='', max_length=200, verbose_name='accessibility link name')),
                ('access_text', models.TextField(blank=True, default='', max_length=50000, verbose_name='accessibility content')),
                ('override', models.BooleanField(default=False, verbose_name='override responsive')),
                ('width', models.PositiveSmallIntegerField(default=0, verbose_name='page width in pixels')),
                ('visible', models.PositiveSmallIntegerField(default=0, verbose_name='visible width in pixels')),
                ('offsetx', models.PositiveSmallIntegerField(default=0, verbose_name='offset x in pixels')),
                ('offsety', models.PositiveSmallIntegerField(default=0, verbose_name='offset y in pixels')),
                ('menu', models.ManyToManyField(blank=True, default=0, to='svija.Menu')),
            ],
            options={
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Prefix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(default='', max_length=2)),
                ('default', models.CharField(default='', max_length=20, verbose_name='default page')),
                ('language', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='svija.Language')),
            ],
            options={
                'verbose_name_plural': 'Prefixes',
            },
        ),
        migrations.CreateModel(
            name='Redirect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('from_url', models.CharField(default='', max_length=200, verbose_name='from URL')),
                ('to_prefix', models.CharField(default='', max_length=5, verbose_name='to prefix, http or https')),
                ('to_page', models.CharField(default='', max_length=200, verbose_name='to page or domain')),
            ],
        ),
        migrations.CreateModel(
            name='Responsive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200)),
                ('source_dir', models.CharField(blank=True, default='', max_length=200, verbose_name='source directory')),
                ('meta_tag', models.CharField(blank=True, default='', max_length=200)),
                ('description', models.CharField(blank=True, default='', max_length=200)),
                ('canonical', models.BooleanField(default=False, verbose_name='canonical page for search engines')),
                ('width', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='pixel width of AI document')),
                ('visible', models.PositiveSmallIntegerField(default=0, verbose_name='visible width in pixels')),
                ('offsetx', models.PositiveSmallIntegerField(default=0, verbose_name='offset x in pixels')),
                ('offsety', models.PositiveSmallIntegerField(default=0, verbose_name='offset y in pixels')),
                ('overflow', models.CharField(blank=True, default='', max_length=200, verbose_name='total % overflow')),
            ],
            options={
                'verbose_name_plural': 'Responsive',
            },
        ),
        migrations.CreateModel(
            name='Robots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200)),
                ('contents', models.TextField(blank=True, default='', max_length=5000, verbose_name='file contents')),
            ],
            options={
                'verbose_name': 'Robots.txt',
                'verbose_name_plural': 'Robots.txt',
            },
        ),
        migrations.CreateModel(
            name='Shared',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200, verbose_name='Scripts Name')),
                ('responsive', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='svija.Responsive')),
            ],
            options={
                'verbose_name': 'Shared Scripts',
                'verbose_name_plural': 'Shared Scripts',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200)),
                ('filename', models.CharField(blank=True, default='', max_length=200, verbose_name='subfolder & filename')),
                ('description', models.CharField(blank=True, default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Svg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(default='', max_length=200)),
                ('order', models.IntegerField(default=0, verbose_name='load order')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='svija.Page')),
            ],
            options={
                'verbose_name': 'svg file',
                'verbose_name_plural': 'svg files',
            },
        ),
        migrations.CreateModel(
            name='SharedScripts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('CSS', 'CSS'), ('head JS', 'head JS'), ('body JS', 'body JS')], default='', max_length=255, verbose_name='type')),
                ('name', models.CharField(default='', max_length=200)),
                ('content', models.TextField(default='', max_length=50000, verbose_name='content')),
                ('order', models.IntegerField(default=0, verbose_name='load order')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('scripts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='svija.Shared')),
            ],
            options={
                'verbose_name': 'shared script',
                'verbose_name_plural': 'shared scripts',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analytics_id', models.CharField(blank=True, default='', max_length=200, verbose_name='analytics ID')),
                ('url', models.CharField(default='', max_length=200, verbose_name='site URL')),
                ('secure', models.BooleanField(default=True, verbose_name='HTTPS')),
                ('maps_api_key', models.CharField(default='', max_length=200, verbose_name='Google Maps API key')),
                ('mail_id', models.CharField(blank=True, default='', max_length=200, verbose_name='username for sending email')),
                ('mail_pass', models.CharField(blank=True, default='', max_length=200, verbose_name='password for sending email')),
                ('mail_srv', models.CharField(blank=True, default='', max_length=200, verbose_name='server for sending email')),
                ('mail_port', models.IntegerField(default=0, verbose_name='email server port')),
                ('mail_tls', models.BooleanField(default=True, verbose_name='use TLS')),
                ('pub_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('prefix', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='svija.Prefix', verbose_name='default prefix')),
                ('robots', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='svija.Robots', verbose_name='robots.txt')),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.AddField(
            model_name='prefix',
            name='responsive',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='svija.Responsive'),
        ),
        migrations.CreateModel(
            name='PageScripts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('head JS', 'head JS'), ('body JS', 'body JS'), ('CSS', 'CSS'), ('HTML', 'HTML'), ('form', 'form')], default='', max_length=255, verbose_name='type')),
                ('name', models.CharField(default='', max_length=200)),
                ('content', models.TextField(default='', max_length=50000, verbose_name='content')),
                ('order', models.IntegerField(default=0, verbose_name='load order')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='svija.Page')),
            ],
            options={
                'verbose_name': 'script',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='page',
            name='prefix',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='svija.Prefix'),
        ),
        migrations.AddField(
            model_name='page',
            name='shared',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='svija.Shared'),
        ),
        migrations.AddField(
            model_name='page',
            name='template',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='svija.Template'),
        ),
        migrations.CreateModel(
            name='MenuScripts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('head JS', 'head JS'), ('body JS', 'body JS'), ('CSS', 'CSS')], default='', max_length=255, verbose_name='type')),
                ('name', models.CharField(default='', max_length=200)),
                ('content', models.TextField(default='', max_length=50000, verbose_name='content')),
                ('order', models.IntegerField(default=0, verbose_name='load order')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='svija.Menu')),
            ],
            options={
                'verbose_name': 'extra script',
                'verbose_name_plural': 'extra scripts',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='menu',
            name='prefix',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='svija.Prefix'),
        ),
        migrations.AddField(
            model_name='menu',
            name='responsive',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='svija.Responsive'),
        ),
    ]
